#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;

use Module::Load::Util qw(instantiate_class_with_optional_args);
use Text::ANSITable;

binmode(STDOUT, ":encoding(utf8)");

my $t = Text::ANSITable->new;
my @all_ct = $t->list_color_themes;
my %all_ctobj;
for my $ctname (@all_ct) {
    say "D:$ctname";
    my $info = instantiate_class_with_optional_args({ns_prefix=>"ColorTheme", construct=>0}, $ctname);
    my $class = $info->{class};
    my $struct = $class->get_struct;
    my $args = ($struct->{examples} && @{ $struct->{examples} } ? $struct->{examples}[0]{args} : undef) // {};
    $all_ctobj{$ctname} = instantiate_class_with_optional_args({}, [$class, $args]);
}

my $chosen_ct = $ARGV[0] // $t->color_theme;

$t->columns(['Name', 'Summary']);
for my $name (@all_ct) {
    my $ctobj = $all_ctobj{$name};
    my $struct = $ctobj->get_struct;
    my $selected = $chosen_ct eq $name;

    $t->add_row([$name . ($selected ? " (*)" : ""), $struct->{summary}],
                {fgcolor=>($selected && $t->use_color ? 'aaaa00' : undef)});
}

say "Tip: you can run me with color theme name as argument to try it out.";
print $t->draw;

$t = Text::ANSITable->new;
$t->color_theme($chosen_ct);
my $ct = $t->color_theme;
$t->columns(['num','percent%','date','bool?','text']);
$t->add_row([1, 0.4, time(), 1, 'hello']);
$t->add_row([-3.3, 1, time(), 0, 'world']);
$t->add_row_separator;
$t->add_row([$_, $_/10, 1367451584+$_*10000, int(rand()*2), "x$_"])
    for 1..5;

say "Demo table";
print $t->draw;

#ABSTRACT: List available color themes for Text::ANSITable
#PODNAME:

=head1 SYNOPSIS

 % ansitable-list-color-themes

Sample output:

# CODE: system $^X, "-Ilib", "script/ansitable-list-color-themes"; die "system() failed" if $?;
